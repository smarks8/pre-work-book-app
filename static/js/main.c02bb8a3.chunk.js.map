{"version":3,"sources":["Header.js","SearchArea.js","BookCard.js","BookList.js","Books.js","App.js","serviceWorker.js","index.js"],"names":["Header","react_default","a","createElement","SearchArea","props","className","onSubmit","searchBook","action","onChange","handleSearch","type","BookCard","src","image","alt","title","author","publisher","target","href","externalLink","BookList","books","map","book","i","console","log","src_BookCard","key","volumeInfo","imageLinks","thumbnail","authors","join","infoLink","Books","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","e","preventDefault","request","get","query","q","state","searchField","maxResults","then","data","setState","toConsumableArray","body","items","catch","err","message","response","value","src_SearchArea","src_BookList","Component","App","src_Header","src_Books","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c02bb8a3.chunk.js","sourcesContent":["import React from 'react';\n\nconst Header = () => {\n    return(\n        <header>\n            <h1>BOOKS!!!!!!!!</h1>\n        </header>\n    )\n}\n\nexport default Header;","import React from 'react';\nimport './stylesheet.css'\n\nconst SearchArea = (props) => {\n    return(\n        <div className=\"search-area\">\n            <form onSubmit={props.searchBook} action=\"\">\n                <input onChange={props.handleSearch} type=\"text\"/>\n                <button className=\"search-button\" type=\"submit\">SEARCH BOOKS</button>\n            </form>\n        </div>\n    )\n}\n\nexport default SearchArea;","import React from 'react';\nimport './stylesheet.css'\n\nconst BookCard = (props) => {\n    return(\n        <div className=\"card-container\">\n            <img src={props.image} alt=\"\"/>\n            <div className=\"desc\">\n                <h2>{props.title}</h2>\n                <h3>{props.author}</h3>\n                <h3>{props.publisher}</h3>\n                <a className=\"card-link\" target=\"_blank\" href={props.externalLink}><button className=\"card-button\"> MORE ABOUT ME</button></a>\n            </div>\n        </div>\n    )\n}\n\nexport default BookCard;","import React from 'react';\nimport BookCard from './BookCard.js'\nimport './stylesheet.css'\n\nconst BookList = (props) => {\n    \n    return(\n        <div className=\"list\">\n            {\n                props.books.map((book, i) => {\n                    console.log()\n                    return <BookCard \n                                key={i}\n                                image={book.volumeInfo.imageLinks ? book.volumeInfo.imageLinks.thumbnail : 'no image!'} \n                                title={book.volumeInfo.title}\n                                author={book.volumeInfo.authors ? book.volumeInfo.authors.join(\", \") : 'Author Unlisted'}\n                                publisher={book.volumeInfo.publisher ? book.volumeInfo.publisher : \"Publisher Unlisted\" }\n                                externalLink={book.volumeInfo.infoLink}\n                            />\n                })\n            }\n        </div>\n    )\n}\n\nexport default BookList;","import React, { Component } from 'react';\nimport SearchArea from './SearchArea.js'\nimport request from 'superagent';\nimport BookList from './BookList'\nimport './stylesheet.css'\n\nclass Books extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            books: [],\n            searchField: ''\n        }\n    }\n\n    searchBook = (e) => {\n        e.preventDefault();\n        request\n            .get(\"https://www.googleapis.com/books/v1/volumes\")\n            .query({ q: this.state.searchField })\n            .query({ maxResults: 40 })\n            .then((data) => {\n                this.setState({books: [...data.body.items]})\n            })\n            .catch(err => {\n                console.log(err.message, err.response)})\n        }\n\n    handleSearch = (e) => {\n        this.setState({ searchField: e.target.value })\n    }\n\n    render() {\n\n        return (\n        <div className=\"Books\">\n            FIND SOME BOOKS\n            <SearchArea searchBook={this.searchBook} handleSearch={this.handleSearch}/>\n            <BookList books={this.state.books}/>\n        </div>\n        );\n    }\n}\n\nexport default Books;","import React, { Component } from 'react';\nimport './App.css';\nimport Header from './Header';\nimport Books from './Books';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Header />\n        <Books />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}